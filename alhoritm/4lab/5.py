from collections import OrderedDict

# размер памяти под кеширование запросов и количество запросов
N, M = map(int, input().split())

# Создаем OrderedDict для хранения кеша
cache = OrderedDict()

# Счетчик обращений к распределенной системе
counter = 0

# Обрабатываем запросы
for _ in range(M):
    # Вводим номер запроса
    R = int(input())

    # Если запрос уже в кеше
    if R in cache:
        # Удаляем его из текущего места в кеше
        del cache[R]
    else:
        # Если запроса нет в кеше, увеличиваем счетчик обращений к распределенной системе
        counter += 1
        # Если кеш полон
        if len(cache) == N:
            # Удаляем наименее недавно использованный запрос из кеша
            cache.popitem(last=False)

    # Добавляем запрос в кеш
    cache[R] = None

# Выводим количество обращений к распределенной системе
print(counter)
